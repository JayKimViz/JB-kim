using Sabio.Data.Providers;
using Sabio.Models.Domain;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Text;
using Sabio.Data;

namespace Sabio.Services
{
    public class InterviewCompanyService
    {
        IDataProvider _data = null;
        public InterviewCompanyService(IDataProvider data)
        {
            _data = data;
        }

        public InterviewCompany Get(int id)
        {

            string procName = "[dbo].[InterviewedCompany_SelectById]";
            InterviewCompany interviewCompany = null;

            _data.ExecuteCmd(procName, delegate (SqlParameterCollection paramCollection) {


                paramCollection.AddWithValue("@Id", id);

            }, delegate (IDataReader reader, short set)
            {
                interviewCompany = MapInterviewCompany(reader);
            }
            );

            return interviewCompany;
        }

        public List<InterviewCompany> GetTop()
        {

            List<InterviewCompany> list = null;
            string procName = "[dbo].[InterviewedCompany_SelectTopTen]";


            _data.ExecuteCmd(procName, inputParamMapper: null,
                singleRecordMapper: delegate (IDataReader reader, short set)
                {
                    InterviewCompany ainterviewCompany = MapInterviewCompany(reader);

                    if (list == null)
                    {
                        list = new List<InterviewCompany>();
                    }

                    list.Add(ainterviewCompany);
                });

            return list;
        }

        private static InterviewCompany MapInterviewCompany(IDataReader reader)
        {
            InterviewCompany ainterviewCompany = new InterviewCompany();

            int startingIndex = 0;

            ainterviewCompany.Id = reader.GetSafeInt32(startingIndex++);
            ainterviewCompany.CompanyName = reader.GetSafeString(startingIndex++);
            ainterviewCompany.Date = reader.GetSafeString(startingIndex++);
            ainterviewCompany.Description = reader.GetSafeString(startingIndex++);
            return ainterviewCompany;
        }
    }
}

